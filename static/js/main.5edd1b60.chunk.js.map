{"version":3,"sources":["components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["useStyles","createUseStyles","div","color","textAlign","Statistics","good","neutral","bad","total","positivePercentage","classes","className","style","fontWeight","container","display","flexDirection","alignItems","width","marginRight","marginLeft","marginTop","backgroundColor","boxShadow","borderRadius","Section","title","children","justifyContent","button","border","padding","margin","cursor","outline","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Notification","message","BUTTON_OPTIONS","App","useState","setGood","setNeutral","setBad","Math","round","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAGMA,EAAYC,YAAgB,CAChCC,IAAK,CACH,MAAO,CACLC,MAAO,OACPC,UAAW,aAkCFC,EA7BI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IAGI,IAFJC,aAEI,MAFI,EAEJ,MADJC,0BACI,MADiB,EACjB,EACEC,EAAUX,IAChB,OACE,sBAAKY,UAAWD,EAAQT,IAAxB,UACE,uCAAUI,KACV,0CAAaC,KACb,sCAASC,KACT,sBAAKK,MAAO,CAAEC,WAAY,QAA1B,UACE,wCAAWL,KACX,sDAAyBC,EAAzB,cCxBFV,EAAYC,YAAgB,CAChCc,UAAW,CACTC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,MAAO,IACPC,YAAa,OACbC,WAAY,OACZC,UAAW,GACXC,gBAAiB,UACjBC,UACE,mGACFC,aAAc,kBACdtB,MAAO,UAmBIuB,EAfC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClBjB,EAAUX,IAChB,OACE,sBAAKY,UAAWD,EAAQI,UAAxB,UACE,6BAAKY,IACJC,MCtBD5B,EAAYC,YAAgB,CAChCc,UAAW,CACTC,QAAS,OACTa,eAAgB,gBAElBC,OAAQ,CACNC,OAAQ,OACRC,QAAS,YACTT,gBAAiB,OACjBpB,MAAO,OACPW,WAAY,IACZmB,OAAQ,GAERC,OAAQ,UACRC,QAAS,OACTX,UAAW,oCA2BAY,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5B3B,EAAUX,IAChB,OACE,qBAAKY,UAAWD,EAAQI,UAAxB,SACGsB,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACE5B,UAAWD,EAAQmB,OAEnBW,KAAK,SACLC,QAAS,kBAAMJ,EAAgBE,IAJjC,SAMGA,GAJIA,SCnBAG,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,oBAAI/B,MAAO,CAAEV,MAAO,QAApB,SAA+ByC,KCIlCC,EAAiB,CAAC,OAAQ,UAAW,OAmD5BC,EAjDH,WAAO,IAAD,EACQC,mBAAS,GADjB,mBACTzC,EADS,KACH0C,EADG,OAEcD,mBAAS,GAFvB,mBAETxC,EAFS,KAEA0C,EAFA,OAGMF,mBAAS,GAHf,mBAGTvC,EAHS,KAGJ0C,EAHI,KAKVzC,EAAQH,EAAOC,EAAUC,EACzBE,EAAqByC,KAAKC,MAAO9C,EAAOG,EAAS,KAkBvD,OACE,gCACE,cAAC,EAAD,CAASkB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEU,QAASQ,EACTP,gBArBoB,SAAAe,GAC1B,OAAQA,GACN,IAAK,OACHL,EAAQ1C,EAAO,GACf,MACF,IAAK,UACH2C,EAAW1C,EAAU,GACrB,MACF,IAAK,MACH2C,EAAO1C,EAAM,SAef,cAAC,EAAD,CAASmB,MAAM,aAAf,SACGrB,EAAO,GAAKE,EAAM,GAAKD,EAAU,EAChC,cAAC,EAAD,CACED,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAckC,QAAQ,4B,MC9ChCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5edd1b60.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\nimport PropTypes from 'prop-types';\n\nconst useStyles = createUseStyles({\n  div: {\n    '& p': {\n      color: 'teal',\n      textAlign: 'center',\n    },\n  },\n});\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total = 0,\n  positivePercentage = 0,\n}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.div}>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <div style={{ fontWeight: 'bold' }}>\n        <p>Total: {total}</p>\n        <p>Positive Percentage: {positivePercentage}%</p>\n      </div>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  totapositivePercentagel: PropTypes.number,\n};\n\nexport default Statistics;\n","import { createUseStyles } from 'react-jss';\nimport PropTypes from 'prop-types';\n\nconst useStyles = createUseStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: 400,\n    marginRight: 'auto',\n    marginLeft: 'auto',\n    marginTop: 20,\n    backgroundColor: '#b0afa9',\n    boxShadow:\n      '0px 2px 1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12)',\n    borderRadius: '0px 0px 6px 6px',\n    color: '#fff',\n  },\n});\n\nconst Section = ({ title, children }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import { createUseStyles } from 'react-jss';\nimport PropTypes from 'prop-types';\n\nconst useStyles = createUseStyles({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n  },\n  button: {\n    border: 'none',\n    padding: '10px 15px',\n    backgroundColor: 'teal',\n    color: '#fff',\n    fontWeight: 500,\n    margin: 10,\n\n    cursor: 'pointer',\n    outline: 'none',\n    boxShadow: '1px 2px 2px 0 rgb(0 0 0 / 0.5)',\n  },\n});\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      {options.map(option => (\n        <button\n          className={classes.button}\n          key={option}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <h2 style={{ color: 'teal' }}>{message}</h2>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from 'react';\n\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nconst BUTTON_OPTIONS = ['Good', 'Neutral', 'Bad'];\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const total = good + neutral + bad;\n  const positivePercentage = Math.round((good / total) * 100);\n\n  const handleLeaveFeedback = name => {\n    switch (name) {\n      case 'Good':\n        setGood(good + 1);\n        break;\n      case 'Neutral':\n        setNeutral(neutral + 1);\n        break;\n      case 'Bad':\n        setBad(bad + 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={BUTTON_OPTIONS}\n          onLeaveFeedback={handleLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {good > 0 || bad > 0 || neutral > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}